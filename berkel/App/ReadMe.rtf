{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //Firestore Database Rules\
\
rules_version = '2';\
\
// Kullan\uc0\u305 c\u305  kay\u305 t oldu\u287 unda tempUsers'a kayd\u305  d\'fc\u351 er.\
// Admin olarak belirlenen hesap(rules'da) tempUsers'a yetki verdi\uc0\u287 inde users'a admin olarak kaydedilir.\
// Ayr\uc0\u305 ca Admin olanlar Storage(Resim) okuma, yazma sa\u287 layabilirler\
\
service cloud.firestore \{\
  match /databases/\{database\}/documents \{\
  \
   function isAdmin() \{\
   		return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true\
   \}\
  \
    // 'data' koleksiyonu i\'e7in izinler\
    match /data/\{documentId=**\} \{\
      allow write, update, read: if isAdmin() == true;\
    \}\
  \
    // 'users' koleksiyonundaki herhangi bir belgeye e\uc0\u351 le\u351 tir\
    match /users/\{userId=**\} \{\
      // Belgenin 'role' alan\uc0\u305 n\u305 n 'admin' oldu\u287 u durumlarda yazma, okuma izni ver\
      allow write, update, read: if request.auth.uid == "6sngATMGmPcxiaDuopCjBYS9cv13";\
    \}\
    \
    // 'tempUsers' koleksiyonu i\'e7in izinler\
    match /tempUsers/\{tempUserId\} \{\
      // Bu belgeleri sadece belge sahibi olan kullan\uc0\u305 c\u305 lar yazabilir ve okuyabilir\
      allow write, update, read, delete: if request.auth != null;\
    \}\
\
    // 'seller' koleksiyonu i\'e7in izinler\
    match /seller/\{sellerId=**\} \{\
      allow write, update, read: if isAdmin() == true;\
    \}\
    \
    // 'cavus' koleksiyonu i\'e7in izinler\
    match /cavus/\{productId=**\} \{\
      allow write, update, read: if isAdmin() == true;\
    \}\
    \
    // 'customer' koleksiyonu i\'e7in izinler\
    match /customer/\{customerId=**\} \{\
      allow write, update, read: if isAdmin() == true;\
    \}\
  \
    // 'products' koleksiyonu i\'e7in izinler\
    match /products/\{productId=**\} \{\
      allow write, update, read: if isAdmin() == true;\
    \}\
    \
    // 'seasons' koleksiyonu i\'e7in izinler\
    match /seasons/\{seasonId=**\} \{\
      allow write, update, read: if isAdmin() == true;\
    \}\
  \}\
\}\
\
//Stogare Rules\
\
rules_version = '2';\
\
// Craft rules based on data in your Firestore database\
service firebase.storage \{\
  match /b/\{bucket\}/o \{\
    match /\{allPaths=**\} \{\
      allow read, write: if firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;\
    \}\
  \}\
\}}